# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    tags: ['v[0-9].[0-9]+.[0-9]+']

permissions:
  contents: write

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Test
        run: go test -v ./...

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Install checkers
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest;
          go install golang.org/x/vuln/cmd/govulncheck@latest
      
      - name: Run GoSec
        run: gosec ./...
      
      - name: Run govulncheck
        run: govulncheck ./...

  build:
    needs: [test, security]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      
      - name: Build app
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags='-s -w' -v -o tacs .
          zip --junk-paths tacs-amd64.zip LICENSE README.* tacs

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: tacs-amd64.zip
